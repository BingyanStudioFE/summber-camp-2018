{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.js","webpack:///./src/controller.js","webpack:///./src/helpers.js","webpack:///./src/item.js","webpack:///./src/store.js","webpack:///./src/template.js","webpack:///./src/view.js"],"names":["store","template","view","controller","setView","document","location","hash","$on","window","Controller","constructor","bindAddItem","addItem","bind","bindEditItemSave","editItemSave","bindEditItemCancel","editItemCancel","bindRemoveItem","removeItem","bindToggleItem","id","completed","toggleCompleted","_filter","bindRemoveCompleted","removeCompletedItems","bindToggleAll","toggleAll","_activeRoute","_lastActiveRoute","raw","route","replace","updateFilterButtons","title","insert","Date","now","clearNewTodo","length","update","editItemDone","find","data","remove","setItemComplete","force","showItems","count","total","active","setItemsLeft","setClearCompletedButtonVisibility","setCompleteAllCheckbox","setMainVisibility","qs","selector","scope","querySelector","target","type","callback","capture","addEventListener","$delegate","handler","dispatchEvent","event","targetElement","potentialElements","querySelectorAll","i","call","escapeForHTML","s","c","Item","ItemList","Empty","Record","EmptyItemQuery","emptyItemQuery","ItemQuery","ItemUpdate","Store","name","localStorage","liveTodos","getLocalStorage","JSON","parse","getItem","setLocalStorage","todos","setItem","stringify","query","k","filter","todo","item","push","Template","itemList","items","reduce","a","itemCounter","activeTodos","_itemId","element","parseInt","parentNode","dataset","ENTER_KEY","ESCAPE_KEY","View","$todoList","$todoItemCounter","$clearCompleted","$main","$toggleAll","$newTodo","editItem","listItem","parentElement","classList","add","input","createElement","className","value","innerText","appendChild","focus","innerHTML","elem","removeChild","itemsLeft","visible","style","display","checked","textContent","trim","iscanceled","keyCode","blur"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.js\");\n","\r\nimport Controller from './controller';\r\nimport {$on} from './helpers';\r\nimport Template from './template';\r\nimport Store from './store';\r\nimport View from './view';\r\n\r\nconst store = new Store('todos-vanilla-es6');\r\n\r\nconst template = new Template();\r\nconst view = new View(template);\r\n\r\n/**\r\n * @type {Controller}\r\n */\r\nconst controller = new Controller(store, view);\r\n\r\nconst setView = () => controller.setView(document.location.hash);\r\n$on(window, 'load', setView);\r\n$on(window, 'hashchange', setView);\r\n\r\n","import {emptyItemQuery} from './item';\r\nimport Store from './store';\r\nimport View from './view';\r\n\r\nexport default class Controller {\r\n\t/**\r\n\t * @param  {!Store} store A Store instance\r\n\t * @param  {!View} view A View instance\r\n\t */\r\n\tconstructor(store, view) {\r\n\t\tthis.store = store;\r\n\t\tthis.view = view;\r\n\r\n\t\tview.bindAddItem(this.addItem.bind(this));\r\n\t\tview.bindEditItemSave(this.editItemSave.bind(this));\r\n\t\tview.bindEditItemCancel(this.editItemCancel.bind(this));\r\n\t\tview.bindRemoveItem(this.removeItem.bind(this));\r\n\t\tview.bindToggleItem((id, completed) => {\r\n\t\t\tthis.toggleCompleted(id, completed);\r\n\t\t\tthis._filter();\r\n\t\t});\r\n\t\tview.bindRemoveCompleted(this.removeCompletedItems.bind(this));\r\n\t\tview.bindToggleAll(this.toggleAll.bind(this));\r\n\r\n\t\tthis._activeRoute = '';\r\n\t\tthis._lastActiveRoute = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Set and render the active route.\r\n\t *\r\n\t * @param {string} raw '' | '#/' | '#/active' | '#/completed'\r\n\t */\r\n\tsetView(raw) {\r\n\t\tconst route = raw.replace(/^#\\//, '');\r\n\t\tthis._activeRoute = route;\r\n\t\tthis._filter();\r\n\t\tthis.view.updateFilterButtons(route);\r\n\t}\r\n\r\n\t/**\r\n\t * Add an Item to the Store and display it in the list.\r\n\t *\r\n\t * @param {!string} title Title of the new item\r\n\t */\r\n\taddItem(title) {\r\n\t\tthis.store.insert({\r\n\t\t\tid: Date.now(),\r\n\t\t\ttitle,\r\n\t\t\tcompleted: false\r\n\t\t}, () => {\r\n\t\t\tthis.view.clearNewTodo();\r\n\t\t\tthis._filter(true);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Save an Item in edit.\r\n\t *\r\n\t * @param {number} id ID of the Item in edit\r\n\t * @param {!string} title New title for the Item in edit\r\n\t */\r\n\teditItemSave(id, title) {\r\n\t\tif (title.length) {\r\n\t\t\tthis.store.update({id, title}, () => {\r\n\t\t\t\tthis.view.editItemDone(id, title);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.removeItem(id);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancel the item editing mode.\r\n\t *\r\n\t * @param {!number} id ID of the Item in edit\r\n\t */\r\n\teditItemCancel(id) {\r\n\t\tthis.store.find({id}, data => {\r\n\t\t\tconst title = data[0].title;\r\n\t\t\tthis.view.editItemDone(id, title);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove the data and elements related to an Item.\r\n\t *\r\n\t * @param {!number} id Item ID of item to remove\r\n\t */\r\n\tremoveItem(id) {\r\n\t\tthis.store.remove({id}, () => {\r\n\t\t\tthis._filter();\r\n\t\t\tthis.view.removeItem(id);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Remove all completed items.\r\n\t */\r\n\tremoveCompletedItems() {\r\n\t\tthis.store.remove({completed: true}, this._filter.bind(this));\r\n\t}\r\n\r\n\t/**\r\n\t * Update an Item in storage based on the state of completed.\r\n\t *\r\n\t * @param {!number} id ID of the target Item\r\n\t * @param {!boolean} completed Desired completed state\r\n\t */\r\n\ttoggleCompleted(id, completed) {\r\n\t\tthis.store.update({id, completed}, () => {\r\n\t\t\tthis.view.setItemComplete(id, completed);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set all items to complete or active.\r\n\t *\r\n\t * @param {boolean} completed Desired completed state\r\n\t */\r\n\ttoggleAll(completed) {\r\n\t\tthis.store.find({completed: !completed}, data => {\r\n\t\t\tfor (let {id} of data) {\r\n\t\t\t\tthis.toggleCompleted(id, completed);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._filter();\r\n\t}\r\n\r\n\t/**\r\n\t * Refresh the list based on the current route.\r\n\t *\r\n\t * @param {boolean} [force] Force a re-paint of the list\r\n\t */\r\n\t_filter(force) {\r\n\t\tconst route = this._activeRoute;\r\n\r\n\t\tif (force || this._lastActiveRoute !== '' || this._lastActiveRoute !== route) {\r\n\t\t\t/* jscs:disable disallowQuotedKeysInObjects */\r\n\t\t\tthis.store.find({\r\n\t\t\t\t'': emptyItemQuery,\r\n\t\t\t\t'active': {completed: false},\r\n\t\t\t\t'completed': {completed: true}\r\n\t\t\t}[route], this.view.showItems.bind(this.view));\r\n\t\t\t/* jscs:enable disallowQuotedKeysInObjects */\r\n\t\t}\r\n\r\n\t\tthis.store.count((total, active, completed) => {\r\n\t\t\tthis.view.setItemsLeft(active);\r\n\t\t\tthis.view.setClearCompletedButtonVisibility(completed);\r\n\r\n\t\t\tthis.view.setCompleteAllCheckbox(completed === total);\r\n\t\t\tthis.view.setMainVisibility(total);\r\n\t\t});\r\n\r\n\t\tthis._lastActiveRoute = route;\r\n\t}\r\n}\r\n","/**\r\n * querySelector wrapper\r\n *\r\n * @param {string} selector Selector to query\r\n * @param {Element} [scope] Optional scope element for the selector\r\n */\r\nexport function qs(selector, scope) {\r\n\treturn (scope || document).querySelector(selector);\r\n}\r\n\r\n/**\r\n * addEventListener wrapper\r\n *\r\n * @param {Element|Window} target Target Element\r\n * @param {string} type Event name to bind to\r\n * @param {Function} callback Event callback\r\n * @param {boolean} [capture] Capture the event\r\n */\r\nexport function $on(target, type, callback, capture) {\r\n\ttarget.addEventListener(type, callback, !!capture);\r\n}\r\n\r\n/**\r\n * Attach a handler to an event for all elements matching a selector.\r\n *\r\n * @param {Element} target Element which the event must bubble to\r\n * @param {string} selector Selector to match\r\n * @param {string} type Event name\r\n * @param {Function} handler Function called when the event bubbles to target\r\n *                           from an element matching selector\r\n * @param {boolean} [capture] Capture the event\r\n */\r\nexport function $delegate(target, selector, type, handler, capture) {\r\n\tconst dispatchEvent = event => {\r\n\t\tconst targetElement = event.target;\r\n\t\tconst potentialElements = target.querySelectorAll(selector);\r\n\t\tlet i = potentialElements.length;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tif (potentialElements[i] === targetElement) {\r\n\t\t\t\thandler.call(targetElement, event);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t$on(target, type, dispatchEvent, !!capture);\r\n}\r\n\r\n/**\r\n * Encode less-than and ampersand characters with entity codes to make user-\r\n * provided text safe to parse as HTML.\r\n *\r\n * @param {string} s String to escape\r\n *\r\n * @returns {string} String with unsafe characters escaped with entity codes\r\n */\r\nexport const escapeForHTML = s => s.replace(/[&<]/g, c => c === '&' ? '&amp;' : '&lt;');\r\n","/**\r\n * @typedef {!{id: number, completed: boolean, title: string}}\r\n */\r\nexport var Item;\r\n\r\n/**\r\n * @typedef {!Array<Item>}\r\n */\r\nexport var ItemList;\r\n\r\n/**\r\n * Enum containing a known-empty record type, matching only empty records unlike Object.\r\n *\r\n * @enum {Object}\r\n */\r\nconst Empty = {\r\n\tRecord: {}\r\n};\r\n\r\n/**\r\n * Empty ItemQuery type, based on the Empty @enum.\r\n *\r\n * @typedef {Empty}\r\n */\r\nexport var EmptyItemQuery;\r\n\r\n/**\r\n * Reference to the only EmptyItemQuery instance.\r\n *\r\n * @type {EmptyItemQuery}\r\n */\r\nexport const emptyItemQuery = Empty.Record;\r\n\r\n/**\r\n * @typedef {!({id: number}|{completed: boolean}|EmptyItemQuery)}\r\n */\r\nexport var ItemQuery;\r\n\r\n/**\r\n * @typedef {!({id: number, title: string}|{id: number, completed: boolean})}\r\n */\r\nexport var ItemUpdate;\r\n","import {Item, ItemList, ItemQuery, ItemUpdate, emptyItemQuery} from './item';\r\n\r\nexport default class Store {\r\n\t/**\r\n\t * @param {!string} name Database name\r\n\t * @param {function()} [callback] Called when the Store is ready\r\n\t */\r\n\tconstructor(name, callback) {\r\n\t\t/**\r\n\t\t * @type {Storage}\r\n\t\t */\r\n\t\tconst localStorage = window.localStorage;\r\n\r\n\t\t/**\r\n\t\t * @type {ItemList}\r\n\t\t */\r\n\t\tlet liveTodos;\r\n\r\n\t\t/**\r\n\t\t * Read the local ItemList from localStorage.\r\n\t\t *\r\n\t\t * @returns {ItemList} Current array of todos\r\n\t\t */\r\n\t\tthis.getLocalStorage = () => {\r\n\t\t\treturn liveTodos || JSON.parse(localStorage.getItem(name) || '[]');\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Write the local ItemList to localStorage.\r\n\t\t *\r\n\t\t * @param {ItemList} todos Array of todos to write\r\n\t\t */\r\n\t\tthis.setLocalStorage = (todos) => {\r\n\t\t\tlocalStorage.setItem(name, JSON.stringify(liveTodos = todos));\r\n\t\t};\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Find items with properties matching those on query.\r\n\t *\r\n\t * @param {ItemQuery} query Query to match\r\n\t * @param {function(ItemList)} callback Called when the query is done\r\n\t *\r\n\t * @example\r\n\t * db.find({completed: true}, data => {\r\n\t *\t // data shall contain items whose completed properties are true\r\n\t * })\r\n\t */\r\n\tfind(query, callback) {\r\n\t\tconst todos = this.getLocalStorage();\r\n\t\tlet k;\r\n\r\n\t\tcallback(todos.filter(todo => {\r\n\t\t\tfor (k in query) {\r\n\t\t\t\tif (query[k] !== todo[k]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}));\r\n\t}\r\n\r\n\t/**\r\n\t * Update an item in the Store.\r\n\t *\r\n\t * @param {ItemUpdate} update Record with an id and a property to update\r\n\t * @param {function()} [callback] Called when partialRecord is applied\r\n\t */\r\n\tupdate(update, callback) {\r\n\t\tconst id = update.id;\r\n\t\tconst todos = this.getLocalStorage();\r\n\t\tlet i = todos.length;\r\n\t\tlet k;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tif (todos[i].id === id) {\r\n\t\t\t\tfor (k in update) {\r\n\t\t\t\t\ttodos[i][k] = update[k];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setLocalStorage(todos);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Insert an item into the Store.\r\n\t *\r\n\t * @param {Item} item Item to insert\r\n\t * @param {function()} [callback] Called when item is inserted\r\n\t */\r\n\tinsert(item, callback) {\r\n\t\tconst todos = this.getLocalStorage();\r\n\t\ttodos.push(item);\r\n\t\tthis.setLocalStorage(todos);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Remove items from the Store based on a query.\r\n\t *\r\n\t * @param {ItemQuery} query Query matching the items to remove\r\n\t * @param {function(ItemList)|function()} [callback] Called when records matching query are removed\r\n\t */\r\n\tremove(query, callback) {\r\n\t\tlet k;\r\n\r\n\t\tconst todos = this.getLocalStorage().filter(todo => {\r\n\t\t\tfor (k in query) {\r\n\t\t\t\tif (query[k] !== todo[k]) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tthis.setLocalStorage(todos);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(todos);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Count total, active, and completed todos.\r\n\t *\r\n\t * @param {function(number, number, number)} callback Called when the count is completed\r\n\t */\r\n\tcount(callback) {\r\n\t\tthis.find(emptyItemQuery, data => {\r\n\t\t\tconst total = data.length;\r\n\r\n\t\t\tlet i = total;\r\n\t\t\tlet completed = 0;\r\n\r\n\t\t\twhile (i--) {\r\n\t\t\t\tcompleted += data[i].completed;\r\n\t\t\t}\r\n\t\t\tcallback(total, total - completed, completed);\r\n\t\t});\r\n\t}\r\n}\r\n","import {ItemList} from './item';\r\n\r\nimport {escapeForHTML} from './helpers';\r\n\r\nexport default class Template {\r\n\t/**\r\n\t * Format the contents of a todo list.\r\n\t *\r\n\t * @param {ItemList} items Object containing keys you want to find in the template to replace.\r\n\t * @returns {!string} Contents for a todo list\r\n\t *\r\n\t * @example\r\n\t * view.show({\r\n\t *\tid: 1,\r\n\t *\ttitle: \"Hello World\",\r\n\t *\tcompleted: false,\r\n\t * })\r\n\t */\r\n\titemList(items) {\r\n\t\treturn items.reduce((a, item) => a + `\r\n<li data-id=\"${item.id}\"${item.completed ? ' class=\"completed\"' : ''}>\r\n\t<div class=\"view\">\r\n\t\t<input class=\"toggle\" type=\"checkbox\" ${item.completed ? 'checked' : ''}>\r\n\t\t<label>${escapeForHTML(item.title)}</label>\r\n\t\t<button class=\"destroy\"></button>\r\n\t</div>\r\n</li>`, '');\r\n\t}\r\n\r\n\t/**\r\n\t * Format the contents of an \"items left\" indicator.\r\n\t *\r\n\t * @param {number} activeTodos Number of active todos\r\n\t *\r\n\t * @returns {!string} Contents for an \"items left\" indicator\r\n\t */\r\n\titemCounter(activeTodos) {\r\n\t\treturn `${activeTodos} item${activeTodos !== 1 ? 's' : ''} left`;\r\n\t}\r\n}\r\n","import {ItemList} from './item';\r\nimport {qs, $on, $delegate} from './helpers';\r\nimport Template from './template';\r\n\r\nconst _itemId = element => parseInt(element.parentNode.dataset.id || element.parentNode.parentNode.dataset.id, 10);\r\nconst ENTER_KEY = 13;\r\nconst ESCAPE_KEY = 27;\r\n\r\nexport default class View {\r\n\t/**\r\n\t * @param {!Template} template A Template instance\r\n\t */\r\n\tconstructor(template) {\r\n\t\tthis.template = template;\r\n\t\tthis.$todoList = qs('.todo-list');\r\n\t\tthis.$todoItemCounter = qs('.todo-count');\r\n\t\tthis.$clearCompleted = qs('.clear-completed');\r\n\t\tthis.$main = qs('.main');\r\n\t\tthis.$toggleAll = qs('.toggle-all');\r\n\t\tthis.$newTodo = qs('.new-todo');\r\n\t\t$delegate(this.$todoList, 'li label', 'dblclick', ({target}) => {\r\n\t\t\tthis.editItem(target);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Put an item into edit mode.\r\n\t *\r\n\t * @param {!Element} target Target Item's label Element\r\n\t */\r\n\teditItem(target) {\r\n\t\tconst listItem = target.parentElement.parentElement;\r\n\r\n\t\tlistItem.classList.add('editing');\r\n\r\n\t\tconst input = document.createElement('input');\r\n\t\tinput.className = 'edit';\r\n\r\n\t\tinput.value = target.innerText;\r\n\t\tlistItem.appendChild(input);\r\n\t\tinput.focus();\r\n\t}\r\n\r\n\t/**\r\n\t * Populate the todo list with a list of items.\r\n\t *\r\n\t * @param {ItemList} items Array of items to display\r\n\t */\r\n\tshowItems(items) {\r\n\t\tthis.$todoList.innerHTML = this.template.itemList(items);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an item from the view.\r\n\t *\r\n\t * @param {number} id Item ID of the item to remove\r\n\t */\r\n\tremoveItem(id) {\r\n\t\tconst elem = qs(`[data-id=\"${id}\"]`);\r\n\r\n\t\tif (elem) {\r\n\t\t\tthis.$todoList.removeChild(elem);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set the number in the 'items left' display.\r\n\t *\r\n\t * @param {number} itemsLeft Number of items left\r\n\t */\r\n\tsetItemsLeft(itemsLeft) {\r\n\t\tthis.$todoItemCounter.innerHTML = this.template.itemCounter(itemsLeft);\r\n\t}\r\n\r\n\t/**\r\n\t * Set the visibility of the \"Clear completed\" button.\r\n\t *\r\n\t * @param {boolean|number} visible Desired visibility of the button\r\n\t */\r\n\tsetClearCompletedButtonVisibility(visible) {\r\n\t\tthis.$clearCompleted.style.display = !!visible ? 'block' : 'none';\r\n\t}\r\n\r\n\t/**\r\n\t * Set the visibility of the main content and footer.\r\n\t *\r\n\t * @param {boolean|number} visible Desired visibility\r\n\t */\r\n\tsetMainVisibility(visible) {\r\n\t\tthis.$main.style.display = !!visible ? 'block' : 'none';\r\n\t}\r\n\r\n\t/**\r\n\t * Set the checked state of the Complete All checkbox.\r\n\t *\r\n\t * @param {boolean|number} checked The desired checked state\r\n\t */\r\n\tsetCompleteAllCheckbox(checked) {\r\n\t\tthis.$toggleAll.checked = !!checked;\r\n\t}\r\n\r\n\t/**\r\n\t * Change the appearance of the filter buttons based on the route.\r\n\t *\r\n\t * @param {string} route The current route\r\n\t */\r\n\tupdateFilterButtons(route) {\r\n\t\tqs('.filters .selected').className = '';\r\n\t\tqs(`.filters [href=\"#/${route}\"]`).className = 'selected';\r\n\t}\r\n\r\n\t/**\r\n\t * Clear the new todo input\r\n\t */\r\n\tclearNewTodo() {\r\n\t\tthis.$newTodo.value = '';\r\n\t}\r\n\r\n\t/**\r\n\t * Render an item as either completed or not.\r\n\t *\r\n\t * @param {!number} id Item ID\r\n\t * @param {!boolean} completed True if the item is completed\r\n\t */\r\n\tsetItemComplete(id, completed) {\r\n\t\tconst listItem = qs(`[data-id=\"${id}\"]`);\r\n\r\n\t\tif (!listItem) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlistItem.className = completed ? 'completed' : '';\r\n\r\n\t\t// In case it was toggled from an event and not by clicking the checkbox\r\n\t\tqs('input', listItem).checked = completed;\r\n\t}\r\n\r\n\t/**\r\n\t * Bring an item out of edit mode.\r\n\t *\r\n\t * @param {!number} id Item ID of the item in edit\r\n\t * @param {!string} title New title for the item in edit\r\n\t */\r\n\teditItemDone(id, title) {\r\n\t\tconst listItem = qs(`[data-id=\"${id}\"]`);\r\n\r\n\t\tconst input = qs('input.edit', listItem);\r\n\t\tlistItem.removeChild(input);\r\n\r\n\t\tlistItem.classList.remove('editing');\r\n\r\n\t\tqs('label', listItem).textContent = title;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindAddItem(handler) {\r\n\t\t$on(this.$newTodo, 'change', ({target}) => {\r\n\t\t\tconst title = target.value.trim();\r\n\t\t\tif (title) {\r\n\t\t\t\thandler(title);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindRemoveCompleted(handler) {\r\n\t\t$on(this.$clearCompleted, 'click', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindToggleAll(handler) {\r\n\t\t$on(this.$toggleAll, 'click', ({target}) => {\r\n\t\t\thandler(target.checked);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindRemoveItem(handler) {\r\n\t\t$delegate(this.$todoList, '.destroy', 'click', ({target}) => {\r\n\t\t\thandler(_itemId(target));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindToggleItem(handler) {\r\n\t\t$delegate(this.$todoList, '.toggle', 'click', ({target}) => {\r\n\t\t\thandler(_itemId(target), target.checked);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindEditItemSave(handler) {\r\n\t\t$delegate(this.$todoList, 'li .edit', 'blur', ({target}) => {\r\n\t\t\tif (!target.dataset.iscanceled) {\r\n\t\t\t\thandler(_itemId(target), target.value.trim());\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\t// Remove the cursor from the input when you hit enter just like if it were a real form\r\n\t\t$delegate(this.$todoList, 'li .edit', 'keypress', ({target, keyCode}) => {\r\n\t\t\tif (keyCode === ENTER_KEY) {\r\n\t\t\t\ttarget.blur();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Function} handler Function called on synthetic event.\r\n\t */\r\n\tbindEditItemCancel(handler) {\r\n\t\t$delegate(this.$todoList, 'li .edit', 'keyup', ({target, keyCode}) => {\r\n\t\t\tif (keyCode === ESCAPE_KEY) {\r\n\t\t\t\ttarget.dataset.iscanceled = true;\r\n\t\t\t\ttarget.blur();\r\n\r\n\t\t\t\thandler(_itemId(target));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"],"sourceRoot":""}